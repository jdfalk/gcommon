// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: queuepb/v2/get_offset_request.proto

package v2

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	v2 "github.com/jdfalk/gcommon/pkg/commonpb/v2"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// Request to get the current offset for a consumer or partition.
// Used for tracking message consumption progress.
type GetOffsetRequest struct {
	state                    protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_QueueName     *string                `protobuf:"bytes,1,opt,name=queue_name,json=queueName"`
	xxx_hidden_PartitionId   int32                  `protobuf:"varint,2,opt,name=partition_id,json=partitionId"`
	xxx_hidden_ConsumerGroup *string                `protobuf:"bytes,3,opt,name=consumer_group,json=consumerGroup"`
	xxx_hidden_ConsumerId    *string                `protobuf:"bytes,4,opt,name=consumer_id,json=consumerId"`
	xxx_hidden_OffsetType    v2.OffsetType          `protobuf:"varint,5,opt,name=offset_type,json=offsetType,enum=common.v2.OffsetType"`
	xxx_hidden_Metadata      *v2.RequestMetadata    `protobuf:"bytes,6,opt,name=metadata"`
	XXX_raceDetectHookData   protoimpl.RaceDetectHookData
	XXX_presence             [1]uint32
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *GetOffsetRequest) Reset() {
	*x = GetOffsetRequest{}
	mi := &file_queuepb_v2_get_offset_request_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOffsetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOffsetRequest) ProtoMessage() {}

func (x *GetOffsetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_queuepb_v2_get_offset_request_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetOffsetRequest) GetQueueName() string {
	if x != nil {
		if x.xxx_hidden_QueueName != nil {
			return *x.xxx_hidden_QueueName
		}
		return ""
	}
	return ""
}

func (x *GetOffsetRequest) GetPartitionId() int32 {
	if x != nil {
		return x.xxx_hidden_PartitionId
	}
	return 0
}

func (x *GetOffsetRequest) GetConsumerGroup() string {
	if x != nil {
		if x.xxx_hidden_ConsumerGroup != nil {
			return *x.xxx_hidden_ConsumerGroup
		}
		return ""
	}
	return ""
}

func (x *GetOffsetRequest) GetConsumerId() string {
	if x != nil {
		if x.xxx_hidden_ConsumerId != nil {
			return *x.xxx_hidden_ConsumerId
		}
		return ""
	}
	return ""
}

func (x *GetOffsetRequest) GetOffsetType() v2.OffsetType {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 4) {
			return x.xxx_hidden_OffsetType
		}
	}
	return v2.OffsetType(0)
}

func (x *GetOffsetRequest) GetMetadata() *v2.RequestMetadata {
	if x != nil {
		return x.xxx_hidden_Metadata
	}
	return nil
}

func (x *GetOffsetRequest) SetQueueName(v string) {
	x.xxx_hidden_QueueName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 6)
}

func (x *GetOffsetRequest) SetPartitionId(v int32) {
	x.xxx_hidden_PartitionId = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 6)
}

func (x *GetOffsetRequest) SetConsumerGroup(v string) {
	x.xxx_hidden_ConsumerGroup = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 6)
}

func (x *GetOffsetRequest) SetConsumerId(v string) {
	x.xxx_hidden_ConsumerId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 6)
}

func (x *GetOffsetRequest) SetOffsetType(v v2.OffsetType) {
	x.xxx_hidden_OffsetType = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 6)
}

func (x *GetOffsetRequest) SetMetadata(v *v2.RequestMetadata) {
	x.xxx_hidden_Metadata = v
}

func (x *GetOffsetRequest) HasQueueName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *GetOffsetRequest) HasPartitionId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *GetOffsetRequest) HasConsumerGroup() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *GetOffsetRequest) HasConsumerId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *GetOffsetRequest) HasOffsetType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *GetOffsetRequest) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Metadata != nil
}

func (x *GetOffsetRequest) ClearQueueName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_QueueName = nil
}

func (x *GetOffsetRequest) ClearPartitionId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_PartitionId = 0
}

func (x *GetOffsetRequest) ClearConsumerGroup() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_ConsumerGroup = nil
}

func (x *GetOffsetRequest) ClearConsumerId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_ConsumerId = nil
}

func (x *GetOffsetRequest) ClearOffsetType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_OffsetType = v2.OffsetType_OFFSET_TYPE_UNSPECIFIED
}

func (x *GetOffsetRequest) ClearMetadata() {
	x.xxx_hidden_Metadata = nil
}

type GetOffsetRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Queue or topic name
	QueueName *string
	// Partition ID (for partitioned queues)
	PartitionId *int32
	// Consumer group ID (optional)
	ConsumerGroup *string
	// Consumer ID within the group (optional)
	ConsumerId *string
	// Type of offset to retrieve
	OffsetType *v2.OffsetType
	// Request metadata for tracing and correlation
	Metadata *v2.RequestMetadata
}

func (b0 GetOffsetRequest_builder) Build() *GetOffsetRequest {
	m0 := &GetOffsetRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.QueueName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 6)
		x.xxx_hidden_QueueName = b.QueueName
	}
	if b.PartitionId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 6)
		x.xxx_hidden_PartitionId = *b.PartitionId
	}
	if b.ConsumerGroup != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 6)
		x.xxx_hidden_ConsumerGroup = b.ConsumerGroup
	}
	if b.ConsumerId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 6)
		x.xxx_hidden_ConsumerId = b.ConsumerId
	}
	if b.OffsetType != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 6)
		x.xxx_hidden_OffsetType = *b.OffsetType
	}
	x.xxx_hidden_Metadata = b.Metadata
	return m0
}

var File_queuepb_v2_get_offset_request_proto protoreflect.FileDescriptor

const file_queuepb_v2_get_offset_request_proto_rawDesc = "" +
	"\n" +
	"#queuepb/v2/get_offset_request.proto\x12\bqueue.v2\x1a\x1dcommonpb/v2/offset_type.proto\x1a\"commonpb/v2/request_metadata.proto\x1a!google/protobuf/go_features.proto\x1a\x1bbuf/validate/validate.proto\"\x97\x02\n" +
	"\x10GetOffsetRequest\x12(\n" +
	"\n" +
	"queue_name\x18\x01 \x01(\tB\t\xbaH\x06r\x04\x10\x01\x18dR\tqueueName\x12!\n" +
	"\fpartition_id\x18\x02 \x01(\x05R\vpartitionId\x12%\n" +
	"\x0econsumer_group\x18\x03 \x01(\tR\rconsumerGroup\x12\x1f\n" +
	"\vconsumer_id\x18\x04 \x01(\tR\n" +
	"consumerId\x126\n" +
	"\voffset_type\x18\x05 \x01(\x0e2\x15.common.v2.OffsetTypeR\n" +
	"offsetType\x126\n" +
	"\bmetadata\x18\x06 \x01(\v2\x1a.common.v2.RequestMetadataR\bmetadataB\x98\x01\n" +
	"\fcom.queue.v2B\x15GetOffsetRequestProtoP\x01Z(github.com/jdfalk/gcommon/pkg/queuepb/v2\xa2\x02\x03QXX\xaa\x02\bQueue.V2\xca\x02\bQueue\\V2\xe2\x02\x14Queue\\V2\\GPBMetadata\xea\x02\tQueue::V2\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_queuepb_v2_get_offset_request_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_queuepb_v2_get_offset_request_proto_goTypes = []any{
	(*GetOffsetRequest)(nil),   // 0: queue.v2.GetOffsetRequest
	(v2.OffsetType)(0),         // 1: common.v2.OffsetType
	(*v2.RequestMetadata)(nil), // 2: common.v2.RequestMetadata
}
var file_queuepb_v2_get_offset_request_proto_depIdxs = []int32{
	1, // 0: queue.v2.GetOffsetRequest.offset_type:type_name -> common.v2.OffsetType
	2, // 1: queue.v2.GetOffsetRequest.metadata:type_name -> common.v2.RequestMetadata
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_queuepb_v2_get_offset_request_proto_init() }
func file_queuepb_v2_get_offset_request_proto_init() {
	if File_queuepb_v2_get_offset_request_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_queuepb_v2_get_offset_request_proto_rawDesc), len(file_queuepb_v2_get_offset_request_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_queuepb_v2_get_offset_request_proto_goTypes,
		DependencyIndexes: file_queuepb_v2_get_offset_request_proto_depIdxs,
		MessageInfos:      file_queuepb_v2_get_offset_request_proto_msgTypes,
	}.Build()
	File_queuepb_v2_get_offset_request_proto = out.File
	file_queuepb_v2_get_offset_request_proto_goTypes = nil
	file_queuepb_v2_get_offset_request_proto_depIdxs = nil
}
