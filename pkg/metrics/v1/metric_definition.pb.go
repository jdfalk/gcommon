// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: metrics/v1/metric_definition.proto

package v1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	v1 "github.com/jdfalk/gcommon/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MetricDefinition struct {
	state                   protoimpl.MessageState           `protogen:"opaque.v1"`
	xxx_hidden_Name         *string                          `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Type         v1.MetricsMetricType             `protobuf:"varint,2,opt,name=type,enum=common.v1.MetricsMetricType"`
	xxx_hidden_Description  *string                          `protobuf:"bytes,3,opt,name=description"`
	xxx_hidden_Unit         *string                          `protobuf:"bytes,4,opt,name=unit"`
	xxx_hidden_Labels       *[]*LabelDefinition              `protobuf:"bytes,5,rep,name=labels"`
	xxx_hidden_Config       *MetricTypeConfig                `protobuf:"bytes,6,opt,name=config"`
	xxx_hidden_Retention    *v1.MetricsRetentionPolicyConfig `protobuf:"bytes,7,opt,name=retention"`
	xxx_hidden_ExportConfig *ExportConfig                    `protobuf:"bytes,8,opt,name=export_config,json=exportConfig"`
	xxx_hidden_Validation   *ValidationRules                 `protobuf:"bytes,9,opt,name=validation"`
	xxx_hidden_Tags         map[string]string                `protobuf:"bytes,10,rep,name=tags" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *MetricDefinition) Reset() {
	*x = MetricDefinition{}
	mi := &file_metrics_v1_metric_definition_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetricDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricDefinition) ProtoMessage() {}

func (x *MetricDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_metrics_v1_metric_definition_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *MetricDefinition) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *MetricDefinition) GetType() v1.MetricsMetricType {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 1) {
			return x.xxx_hidden_Type
		}
	}
	return v1.MetricsMetricType(0)
}

func (x *MetricDefinition) GetDescription() string {
	if x != nil {
		if x.xxx_hidden_Description != nil {
			return *x.xxx_hidden_Description
		}
		return ""
	}
	return ""
}

func (x *MetricDefinition) GetUnit() string {
	if x != nil {
		if x.xxx_hidden_Unit != nil {
			return *x.xxx_hidden_Unit
		}
		return ""
	}
	return ""
}

func (x *MetricDefinition) GetLabels() []*LabelDefinition {
	if x != nil {
		if x.xxx_hidden_Labels != nil {
			return *x.xxx_hidden_Labels
		}
	}
	return nil
}

func (x *MetricDefinition) GetConfig() *MetricTypeConfig {
	if x != nil {
		return x.xxx_hidden_Config
	}
	return nil
}

func (x *MetricDefinition) GetRetention() *v1.MetricsRetentionPolicyConfig {
	if x != nil {
		return x.xxx_hidden_Retention
	}
	return nil
}

func (x *MetricDefinition) GetExportConfig() *ExportConfig {
	if x != nil {
		return x.xxx_hidden_ExportConfig
	}
	return nil
}

func (x *MetricDefinition) GetValidation() *ValidationRules {
	if x != nil {
		return x.xxx_hidden_Validation
	}
	return nil
}

func (x *MetricDefinition) GetTags() map[string]string {
	if x != nil {
		return x.xxx_hidden_Tags
	}
	return nil
}

func (x *MetricDefinition) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 10)
}

func (x *MetricDefinition) SetType(v v1.MetricsMetricType) {
	x.xxx_hidden_Type = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 10)
}

func (x *MetricDefinition) SetDescription(v string) {
	x.xxx_hidden_Description = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 10)
}

func (x *MetricDefinition) SetUnit(v string) {
	x.xxx_hidden_Unit = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 10)
}

func (x *MetricDefinition) SetLabels(v []*LabelDefinition) {
	x.xxx_hidden_Labels = &v
}

func (x *MetricDefinition) SetConfig(v *MetricTypeConfig) {
	x.xxx_hidden_Config = v
}

func (x *MetricDefinition) SetRetention(v *v1.MetricsRetentionPolicyConfig) {
	x.xxx_hidden_Retention = v
}

func (x *MetricDefinition) SetExportConfig(v *ExportConfig) {
	x.xxx_hidden_ExportConfig = v
}

func (x *MetricDefinition) SetValidation(v *ValidationRules) {
	x.xxx_hidden_Validation = v
}

func (x *MetricDefinition) SetTags(v map[string]string) {
	x.xxx_hidden_Tags = v
}

func (x *MetricDefinition) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *MetricDefinition) HasType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *MetricDefinition) HasDescription() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *MetricDefinition) HasUnit() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *MetricDefinition) HasConfig() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Config != nil
}

func (x *MetricDefinition) HasRetention() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Retention != nil
}

func (x *MetricDefinition) HasExportConfig() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_ExportConfig != nil
}

func (x *MetricDefinition) HasValidation() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Validation != nil
}

func (x *MetricDefinition) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *MetricDefinition) ClearType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Type = v1.MetricsMetricType_METRIC_TYPE_UNSPECIFIED
}

func (x *MetricDefinition) ClearDescription() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Description = nil
}

func (x *MetricDefinition) ClearUnit() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Unit = nil
}

func (x *MetricDefinition) ClearConfig() {
	x.xxx_hidden_Config = nil
}

func (x *MetricDefinition) ClearRetention() {
	x.xxx_hidden_Retention = nil
}

func (x *MetricDefinition) ClearExportConfig() {
	x.xxx_hidden_ExportConfig = nil
}

func (x *MetricDefinition) ClearValidation() {
	x.xxx_hidden_Validation = nil
}

type MetricDefinition_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Unique name for the metric
	Name *string
	// Type of metric (counter, gauge, histogram, etc.)
	Type *v1.MetricsMetricType
	// Human-readable description
	Description *string
	// Unit of measurement (e.g., "bytes", "requests", "seconds")
	Unit *string
	// Labels that this metric supports
	Labels []*LabelDefinition
	// Metric-specific configuration
	Config *MetricTypeConfig
	// Retention policy for this metric
	Retention *v1.MetricsRetentionPolicyConfig
	// Export configuration for this metric
	ExportConfig *ExportConfig
	// Validation rules for metric values
	Validation *ValidationRules
	// Tags for metric organization and discovery
	Tags map[string]string
}

func (b0 MetricDefinition_builder) Build() *MetricDefinition {
	m0 := &MetricDefinition{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 10)
		x.xxx_hidden_Name = b.Name
	}
	if b.Type != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 10)
		x.xxx_hidden_Type = *b.Type
	}
	if b.Description != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 10)
		x.xxx_hidden_Description = b.Description
	}
	if b.Unit != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 10)
		x.xxx_hidden_Unit = b.Unit
	}
	x.xxx_hidden_Labels = &b.Labels
	x.xxx_hidden_Config = b.Config
	x.xxx_hidden_Retention = b.Retention
	x.xxx_hidden_ExportConfig = b.ExportConfig
	x.xxx_hidden_Validation = b.Validation
	x.xxx_hidden_Tags = b.Tags
	return m0
}

var File_metrics_v1_metric_definition_proto protoreflect.FileDescriptor

const file_metrics_v1_metric_definition_proto_rawDesc = "" +
	"\n" +
	"\"metrics/v1/metric_definition.proto\x12\n" +
	"metrics.v1\x1a\x1bcommon/v1/metric_type.proto\x1a/common/v1/metrics_retention_policy_config.proto\x1a\x1emetrics/v1/export_config.proto\x1a!metrics/v1/label_definition.proto\x1a#metrics/v1/metric_type_config.proto\x1a!metrics/v1/validation_rules.proto\x1a!google/protobuf/go_features.proto\x1a\x1bbuf/validate/validate.proto\"\xc6\x04\n" +
	"\x10MetricDefinition\x12\x1d\n" +
	"\x04name\x18\x01 \x01(\tB\t\xbaH\x06r\x04\x10\x01\x18dR\x04name\x120\n" +
	"\x04type\x18\x02 \x01(\x0e2\x1c.common.v1.MetricsMetricTypeR\x04type\x12*\n" +
	"\vdescription\x18\x03 \x01(\tB\b\xbaH\x05r\x03\x18\xe8\aR\vdescription\x12\x12\n" +
	"\x04unit\x18\x04 \x01(\tR\x04unit\x123\n" +
	"\x06labels\x18\x05 \x03(\v2\x1b.metrics.v1.LabelDefinitionR\x06labels\x124\n" +
	"\x06config\x18\x06 \x01(\v2\x1c.metrics.v1.MetricTypeConfigR\x06config\x12E\n" +
	"\tretention\x18\a \x01(\v2'.common.v1.MetricsRetentionPolicyConfigR\tretention\x12=\n" +
	"\rexport_config\x18\b \x01(\v2\x18.metrics.v1.ExportConfigR\fexportConfig\x12;\n" +
	"\n" +
	"validation\x18\t \x01(\v2\x1b.metrics.v1.ValidationRulesR\n" +
	"validation\x12:\n" +
	"\x04tags\x18\n" +
	" \x03(\v2&.metrics.v1.MetricDefinition.TagsEntryR\x04tags\x1a7\n" +
	"\tTagsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B.Z$github.com/jdfalk/gcommon/metrics/v1\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_metrics_v1_metric_definition_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_metrics_v1_metric_definition_proto_goTypes = []any{
	(*MetricDefinition)(nil),                // 0: metrics.v1.MetricDefinition
	nil,                                     // 1: metrics.v1.MetricDefinition.TagsEntry
	(v1.MetricsMetricType)(0),               // 2: common.v1.MetricsMetricType
	(*LabelDefinition)(nil),                 // 3: metrics.v1.LabelDefinition
	(*MetricTypeConfig)(nil),                // 4: metrics.v1.MetricTypeConfig
	(*v1.MetricsRetentionPolicyConfig)(nil), // 5: common.v1.MetricsRetentionPolicyConfig
	(*ExportConfig)(nil),                    // 6: metrics.v1.ExportConfig
	(*ValidationRules)(nil),                 // 7: metrics.v1.ValidationRules
}
var file_metrics_v1_metric_definition_proto_depIdxs = []int32{
	2, // 0: metrics.v1.MetricDefinition.type:type_name -> common.v1.MetricsMetricType
	3, // 1: metrics.v1.MetricDefinition.labels:type_name -> metrics.v1.LabelDefinition
	4, // 2: metrics.v1.MetricDefinition.config:type_name -> metrics.v1.MetricTypeConfig
	5, // 3: metrics.v1.MetricDefinition.retention:type_name -> common.v1.MetricsRetentionPolicyConfig
	6, // 4: metrics.v1.MetricDefinition.export_config:type_name -> metrics.v1.ExportConfig
	7, // 5: metrics.v1.MetricDefinition.validation:type_name -> metrics.v1.ValidationRules
	1, // 6: metrics.v1.MetricDefinition.tags:type_name -> metrics.v1.MetricDefinition.TagsEntry
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_metrics_v1_metric_definition_proto_init() }
func file_metrics_v1_metric_definition_proto_init() {
	if File_metrics_v1_metric_definition_proto != nil {
		return
	}
	file_metrics_v1_export_config_proto_init()
	file_metrics_v1_label_definition_proto_init()
	file_metrics_v1_metric_type_config_proto_init()
	file_metrics_v1_validation_rules_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_metrics_v1_metric_definition_proto_rawDesc), len(file_metrics_v1_metric_definition_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_metrics_v1_metric_definition_proto_goTypes,
		DependencyIndexes: file_metrics_v1_metric_definition_proto_depIdxs,
		MessageInfos:      file_metrics_v1_metric_definition_proto_msgTypes,
	}.Build()
	File_metrics_v1_metric_definition_proto = out.File
	file_metrics_v1_metric_definition_proto_goTypes = nil
	file_metrics_v1_metric_definition_proto_depIdxs = nil
}
