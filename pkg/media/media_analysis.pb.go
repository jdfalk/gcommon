// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: media/v1/media_analysis.proto

package media

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MediaAnalysis struct {
	state                      protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Technical       *TechnicalMetadata     `protobuf:"bytes,1,opt,name=technical"`
	xxx_hidden_QualityAnalysis *MediaQuality          `protobuf:"bytes,2,opt,name=quality_analysis,json=qualityAnalysis"`
	xxx_hidden_Scenes          *[]*SceneDetection     `protobuf:"bytes,3,rep,name=scenes"`
	xxx_hidden_Thumbnails      *[]*ThumbnailInfo      `protobuf:"bytes,4,rep,name=thumbnails"`
	xxx_hidden_AudioAnalysis   *AudioAnalysis         `protobuf:"bytes,5,opt,name=audio_analysis,json=audioAnalysis"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *MediaAnalysis) Reset() {
	*x = MediaAnalysis{}
	mi := &file_media_v1_media_analysis_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MediaAnalysis) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MediaAnalysis) ProtoMessage() {}

func (x *MediaAnalysis) ProtoReflect() protoreflect.Message {
	mi := &file_media_v1_media_analysis_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *MediaAnalysis) GetTechnical() *TechnicalMetadata {
	if x != nil {
		return x.xxx_hidden_Technical
	}
	return nil
}

func (x *MediaAnalysis) GetQualityAnalysis() *MediaQuality {
	if x != nil {
		return x.xxx_hidden_QualityAnalysis
	}
	return nil
}

func (x *MediaAnalysis) GetScenes() []*SceneDetection {
	if x != nil {
		if x.xxx_hidden_Scenes != nil {
			return *x.xxx_hidden_Scenes
		}
	}
	return nil
}

func (x *MediaAnalysis) GetThumbnails() []*ThumbnailInfo {
	if x != nil {
		if x.xxx_hidden_Thumbnails != nil {
			return *x.xxx_hidden_Thumbnails
		}
	}
	return nil
}

func (x *MediaAnalysis) GetAudioAnalysis() *AudioAnalysis {
	if x != nil {
		return x.xxx_hidden_AudioAnalysis
	}
	return nil
}

func (x *MediaAnalysis) SetTechnical(v *TechnicalMetadata) {
	x.xxx_hidden_Technical = v
}

func (x *MediaAnalysis) SetQualityAnalysis(v *MediaQuality) {
	x.xxx_hidden_QualityAnalysis = v
}

func (x *MediaAnalysis) SetScenes(v []*SceneDetection) {
	x.xxx_hidden_Scenes = &v
}

func (x *MediaAnalysis) SetThumbnails(v []*ThumbnailInfo) {
	x.xxx_hidden_Thumbnails = &v
}

func (x *MediaAnalysis) SetAudioAnalysis(v *AudioAnalysis) {
	x.xxx_hidden_AudioAnalysis = v
}

func (x *MediaAnalysis) HasTechnical() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Technical != nil
}

func (x *MediaAnalysis) HasQualityAnalysis() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_QualityAnalysis != nil
}

func (x *MediaAnalysis) HasAudioAnalysis() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_AudioAnalysis != nil
}

func (x *MediaAnalysis) ClearTechnical() {
	x.xxx_hidden_Technical = nil
}

func (x *MediaAnalysis) ClearQualityAnalysis() {
	x.xxx_hidden_QualityAnalysis = nil
}

func (x *MediaAnalysis) ClearAudioAnalysis() {
	x.xxx_hidden_AudioAnalysis = nil
}

type MediaAnalysis_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Technical       *TechnicalMetadata
	QualityAnalysis *MediaQuality
	Scenes          []*SceneDetection
	Thumbnails      []*ThumbnailInfo
	AudioAnalysis   *AudioAnalysis
}

func (b0 MediaAnalysis_builder) Build() *MediaAnalysis {
	m0 := &MediaAnalysis{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Technical = b.Technical
	x.xxx_hidden_QualityAnalysis = b.QualityAnalysis
	x.xxx_hidden_Scenes = &b.Scenes
	x.xxx_hidden_Thumbnails = &b.Thumbnails
	x.xxx_hidden_AudioAnalysis = b.AudioAnalysis
	return m0
}

var File_media_v1_media_analysis_proto protoreflect.FileDescriptor

const file_media_v1_media_analysis_proto_rawDesc = "" +
	"\n" +
	"\x1dmedia/v1/media_analysis.proto\x12\bmedia.v1\x1a\x1cmedia/v1/media_quality.proto\x1a!google/protobuf/go_features.proto\x1a\x1bbuf/validate/validate.proto\x1a\x1dmedia/v1/audio_analysis.proto\x1a\x1emedia/v1/scene_detection.proto\x1a!media/v1/technical_metadata.proto\x1a\x1dmedia/v1/thumbnail_info.proto\"\xcc\x02\n" +
	"\rMediaAnalysis\x129\n" +
	"\ttechnical\x18\x01 \x01(\v2\x1b.media.v1.TechnicalMetadataR\ttechnical\x12A\n" +
	"\x10quality_analysis\x18\x02 \x01(\v2\x16.media.v1.MediaQualityR\x0fqualityAnalysis\x12:\n" +
	"\x06scenes\x18\x03 \x03(\v2\x18.media.v1.SceneDetectionB\b\xbaH\x05\x92\x01\x02\b\x01R\x06scenes\x12A\n" +
	"\n" +
	"thumbnails\x18\x04 \x03(\v2\x17.media.v1.ThumbnailInfoB\b\xbaH\x05\x92\x01\x02\b\x01R\n" +
	"thumbnails\x12>\n" +
	"\x0eaudio_analysis\x18\x05 \x01(\v2\x17.media.v1.AudioAnalysisR\raudioAnalysisB-Z#github.com/jdfalk/gcommon/pkg/media\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_media_v1_media_analysis_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_media_v1_media_analysis_proto_goTypes = []any{
	(*MediaAnalysis)(nil),     // 0: media.v1.MediaAnalysis
	(*TechnicalMetadata)(nil), // 1: media.v1.TechnicalMetadata
	(*MediaQuality)(nil),      // 2: media.v1.MediaQuality
	(*SceneDetection)(nil),    // 3: media.v1.SceneDetection
	(*ThumbnailInfo)(nil),     // 4: media.v1.ThumbnailInfo
	(*AudioAnalysis)(nil),     // 5: media.v1.AudioAnalysis
}
var file_media_v1_media_analysis_proto_depIdxs = []int32{
	1, // 0: media.v1.MediaAnalysis.technical:type_name -> media.v1.TechnicalMetadata
	2, // 1: media.v1.MediaAnalysis.quality_analysis:type_name -> media.v1.MediaQuality
	3, // 2: media.v1.MediaAnalysis.scenes:type_name -> media.v1.SceneDetection
	4, // 3: media.v1.MediaAnalysis.thumbnails:type_name -> media.v1.ThumbnailInfo
	5, // 4: media.v1.MediaAnalysis.audio_analysis:type_name -> media.v1.AudioAnalysis
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_media_v1_media_analysis_proto_init() }
func file_media_v1_media_analysis_proto_init() {
	if File_media_v1_media_analysis_proto != nil {
		return
	}
	file_media_v1_media_quality_proto_init()
	file_media_v1_audio_analysis_proto_init()
	file_media_v1_scene_detection_proto_init()
	file_media_v1_technical_metadata_proto_init()
	file_media_v1_thumbnail_info_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_media_v1_media_analysis_proto_rawDesc), len(file_media_v1_media_analysis_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_media_v1_media_analysis_proto_goTypes,
		DependencyIndexes: file_media_v1_media_analysis_proto_depIdxs,
		MessageInfos:      file_media_v1_media_analysis_proto_msgTypes,
	}.Build()
	File_media_v1_media_analysis_proto = out.File
	file_media_v1_media_analysis_proto_goTypes = nil
	file_media_v1_media_analysis_proto_depIdxs = nil
}
