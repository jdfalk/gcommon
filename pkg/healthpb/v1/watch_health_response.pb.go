// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: healthpb/v1/watch_health_response.proto

package healthpb

import (
	commonpb "github.com/jdfalk/gcommon/pkg/commonpb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// WatchHealthResponse streams health status updates.
// Provides real-time health monitoring data.
// Follows 1-1-1 pattern: one message per file.
type WatchHealthResponse struct {
	state                  protoimpl.MessageState     `protogen:"opaque.v1"`
	xxx_hidden_UpdateType  *string                    `protobuf:"bytes,1,opt,name=update_type,json=updateType"`
	xxx_hidden_Result      *HealthResult              `protobuf:"bytes,2,opt,name=result"`
	xxx_hidden_Event       *HealthEvent               `protobuf:"bytes,3,opt,name=event"`
	xxx_hidden_Metadata    *commonpb.ResponseMetadata `protobuf:"bytes,4,opt,name=metadata"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *WatchHealthResponse) Reset() {
	*x = WatchHealthResponse{}
	mi := &file_healthpb_v1_watch_health_response_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WatchHealthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchHealthResponse) ProtoMessage() {}

func (x *WatchHealthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_healthpb_v1_watch_health_response_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *WatchHealthResponse) GetUpdateType() string {
	if x != nil {
		if x.xxx_hidden_UpdateType != nil {
			return *x.xxx_hidden_UpdateType
		}
		return ""
	}
	return ""
}

func (x *WatchHealthResponse) GetResult() *HealthResult {
	if x != nil {
		return x.xxx_hidden_Result
	}
	return nil
}

func (x *WatchHealthResponse) GetEvent() *HealthEvent {
	if x != nil {
		return x.xxx_hidden_Event
	}
	return nil
}

func (x *WatchHealthResponse) GetMetadata() *commonpb.ResponseMetadata {
	if x != nil {
		return x.xxx_hidden_Metadata
	}
	return nil
}

func (x *WatchHealthResponse) SetUpdateType(v string) {
	x.xxx_hidden_UpdateType = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *WatchHealthResponse) SetResult(v *HealthResult) {
	x.xxx_hidden_Result = v
}

func (x *WatchHealthResponse) SetEvent(v *HealthEvent) {
	x.xxx_hidden_Event = v
}

func (x *WatchHealthResponse) SetMetadata(v *commonpb.ResponseMetadata) {
	x.xxx_hidden_Metadata = v
}

func (x *WatchHealthResponse) HasUpdateType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *WatchHealthResponse) HasResult() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Result != nil
}

func (x *WatchHealthResponse) HasEvent() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Event != nil
}

func (x *WatchHealthResponse) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Metadata != nil
}

func (x *WatchHealthResponse) ClearUpdateType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_UpdateType = nil
}

func (x *WatchHealthResponse) ClearResult() {
	x.xxx_hidden_Result = nil
}

func (x *WatchHealthResponse) ClearEvent() {
	x.xxx_hidden_Event = nil
}

func (x *WatchHealthResponse) ClearMetadata() {
	x.xxx_hidden_Metadata = nil
}

type WatchHealthResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Type of update (result, event, heartbeat)
	UpdateType *string
	// Health check result (for result updates)
	Result *HealthResult
	// Health event (for event updates)
	Event *HealthEvent
	// Response metadata
	Metadata *commonpb.ResponseMetadata
}

func (b0 WatchHealthResponse_builder) Build() *WatchHealthResponse {
	m0 := &WatchHealthResponse{}
	b, x := &b0, m0
	_, _ = b, x
	if b.UpdateType != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_UpdateType = b.UpdateType
	}
	x.xxx_hidden_Result = b.Result
	x.xxx_hidden_Event = b.Event
	x.xxx_hidden_Metadata = b.Metadata
	return m0
}

var File_healthpb_v1_watch_health_response_proto protoreflect.FileDescriptor

const file_healthpb_v1_watch_health_response_proto_rawDesc = "" +
	"\n" +
	"'healthpb/v1/watch_health_response.proto\x12\thealth.v1\x1a\x1fhealthpb/v1/health_result.proto\x1a\x1ehealthpb/v1/health_event.proto\x1a#commonpb/v1/response_metadata.proto\x1a!google/protobuf/go_features.proto\"\xce\x01\n" +
	"\x13WatchHealthResponse\x12\x1f\n" +
	"\vupdate_type\x18\x01 \x01(\tR\n" +
	"updateType\x12/\n" +
	"\x06result\x18\x02 \x01(\v2\x17.health.v1.HealthResultR\x06result\x12,\n" +
	"\x05event\x18\x03 \x01(\v2\x16.health.v1.HealthEventR\x05event\x127\n" +
	"\bmetadata\x18\x04 \x01(\v2\x1b.common.v1.ResponseMetadataR\bmetadataB\x9e\x01\n" +
	"\rcom.health.v1B\x18WatchHealthResponseProtoP\x01Z&github.com/jdfalk/gcommon/pkg/healthpb\xa2\x02\x03HXX\xaa\x02\tHealth.V1\xca\x02\tHealth\\V1\xe2\x02\x15Health\\V1\\GPBMetadata\xea\x02\n" +
	"Health::V1\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_healthpb_v1_watch_health_response_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_healthpb_v1_watch_health_response_proto_goTypes = []any{
	(*WatchHealthResponse)(nil),       // 0: health.v1.WatchHealthResponse
	(*HealthResult)(nil),              // 1: health.v1.HealthResult
	(*HealthEvent)(nil),               // 2: health.v1.HealthEvent
	(*commonpb.ResponseMetadata)(nil), // 3: common.v1.ResponseMetadata
}
var file_healthpb_v1_watch_health_response_proto_depIdxs = []int32{
	1, // 0: health.v1.WatchHealthResponse.result:type_name -> health.v1.HealthResult
	2, // 1: health.v1.WatchHealthResponse.event:type_name -> health.v1.HealthEvent
	3, // 2: health.v1.WatchHealthResponse.metadata:type_name -> common.v1.ResponseMetadata
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_healthpb_v1_watch_health_response_proto_init() }
func file_healthpb_v1_watch_health_response_proto_init() {
	if File_healthpb_v1_watch_health_response_proto != nil {
		return
	}
	file_healthpb_v1_health_result_proto_init()
	file_healthpb_v1_health_event_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_healthpb_v1_watch_health_response_proto_rawDesc), len(file_healthpb_v1_watch_health_response_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_healthpb_v1_watch_health_response_proto_goTypes,
		DependencyIndexes: file_healthpb_v1_watch_health_response_proto_depIdxs,
		MessageInfos:      file_healthpb_v1_watch_health_response_proto_msgTypes,
	}.Build()
	File_healthpb_v1_watch_health_response_proto = out.File
	file_healthpb_v1_watch_health_response_proto_goTypes = nil
	file_healthpb_v1_watch_health_response_proto_depIdxs = nil
}
