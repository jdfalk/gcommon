// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: authpb/v2/extend_session_request.proto

package authpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ExtendSessionRequest represents a request to extend a session
type ExtendSessionRequest struct {
	state                       protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_SessionToken     *string                `protobuf:"bytes,1,opt,name=session_token,json=sessionToken"`
	xxx_hidden_NewExpiresAt     int64                  `protobuf:"varint,2,opt,name=new_expires_at,json=newExpiresAt"`
	xxx_hidden_ExtendBySeconds  int32                  `protobuf:"varint,3,opt,name=extend_by_seconds,json=extendBySeconds"`
	xxx_hidden_UpdateAccessTime bool                   `protobuf:"varint,4,opt,name=update_access_time,json=updateAccessTime"`
	XXX_raceDetectHookData      protoimpl.RaceDetectHookData
	XXX_presence                [1]uint32
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *ExtendSessionRequest) Reset() {
	*x = ExtendSessionRequest{}
	mi := &file_authpb_v2_extend_session_request_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExtendSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtendSessionRequest) ProtoMessage() {}

func (x *ExtendSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_authpb_v2_extend_session_request_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ExtendSessionRequest) GetSessionToken() string {
	if x != nil {
		if x.xxx_hidden_SessionToken != nil {
			return *x.xxx_hidden_SessionToken
		}
		return ""
	}
	return ""
}

func (x *ExtendSessionRequest) GetNewExpiresAt() int64 {
	if x != nil {
		return x.xxx_hidden_NewExpiresAt
	}
	return 0
}

func (x *ExtendSessionRequest) GetExtendBySeconds() int32 {
	if x != nil {
		return x.xxx_hidden_ExtendBySeconds
	}
	return 0
}

func (x *ExtendSessionRequest) GetUpdateAccessTime() bool {
	if x != nil {
		return x.xxx_hidden_UpdateAccessTime
	}
	return false
}

func (x *ExtendSessionRequest) SetSessionToken(v string) {
	x.xxx_hidden_SessionToken = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *ExtendSessionRequest) SetNewExpiresAt(v int64) {
	x.xxx_hidden_NewExpiresAt = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *ExtendSessionRequest) SetExtendBySeconds(v int32) {
	x.xxx_hidden_ExtendBySeconds = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *ExtendSessionRequest) SetUpdateAccessTime(v bool) {
	x.xxx_hidden_UpdateAccessTime = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *ExtendSessionRequest) HasSessionToken() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ExtendSessionRequest) HasNewExpiresAt() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ExtendSessionRequest) HasExtendBySeconds() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ExtendSessionRequest) HasUpdateAccessTime() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *ExtendSessionRequest) ClearSessionToken() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_SessionToken = nil
}

func (x *ExtendSessionRequest) ClearNewExpiresAt() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_NewExpiresAt = 0
}

func (x *ExtendSessionRequest) ClearExtendBySeconds() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_ExtendBySeconds = 0
}

func (x *ExtendSessionRequest) ClearUpdateAccessTime() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_UpdateAccessTime = false
}

type ExtendSessionRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Session token or ID to extend
	SessionToken *string
	// New expiration time (Unix timestamp)
	// If 0, use default extension period
	NewExpiresAt *int64
	// Extension duration in seconds (alternative to new_expires_at)
	ExtendBySeconds *int32
	// Whether to update the last_accessed timestamp
	UpdateAccessTime *bool
}

func (b0 ExtendSessionRequest_builder) Build() *ExtendSessionRequest {
	m0 := &ExtendSessionRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.SessionToken != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_SessionToken = b.SessionToken
	}
	if b.NewExpiresAt != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_NewExpiresAt = *b.NewExpiresAt
	}
	if b.ExtendBySeconds != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_ExtendBySeconds = *b.ExtendBySeconds
	}
	if b.UpdateAccessTime != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_UpdateAccessTime = *b.UpdateAccessTime
	}
	return m0
}

var File_authpb_v2_extend_session_request_proto protoreflect.FileDescriptor

const file_authpb_v2_extend_session_request_proto_rawDesc = "" +
	"\n" +
	"&authpb/v2/extend_session_request.proto\x12\aauth.v2\x1a!google/protobuf/go_features.proto\"\xbb\x01\n" +
	"\x14ExtendSessionRequest\x12#\n" +
	"\rsession_token\x18\x01 \x01(\tR\fsessionToken\x12$\n" +
	"\x0enew_expires_at\x18\x02 \x01(\x03R\fnewExpiresAt\x12*\n" +
	"\x11extend_by_seconds\x18\x03 \x01(\x05R\x0fextendBySeconds\x12,\n" +
	"\x12update_access_time\x18\x04 \x01(\bR\x10updateAccessTimeB\x93\x01\n" +
	"\vcom.auth.v2B\x19ExtendSessionRequestProtoP\x01Z$github.com/jdfalk/gcommon/pkg/authpb\xa2\x02\x03AXX\xaa\x02\aAuth.V2\xca\x02\aAuth\\V2\xe2\x02\x13Auth\\V2\\GPBMetadata\xea\x02\bAuth::V2\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_authpb_v2_extend_session_request_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_authpb_v2_extend_session_request_proto_goTypes = []any{
	(*ExtendSessionRequest)(nil), // 0: auth.v2.ExtendSessionRequest
}
var file_authpb_v2_extend_session_request_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_authpb_v2_extend_session_request_proto_init() }
func file_authpb_v2_extend_session_request_proto_init() {
	if File_authpb_v2_extend_session_request_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_authpb_v2_extend_session_request_proto_rawDesc), len(file_authpb_v2_extend_session_request_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_authpb_v2_extend_session_request_proto_goTypes,
		DependencyIndexes: file_authpb_v2_extend_session_request_proto_depIdxs,
		MessageInfos:      file_authpb_v2_extend_session_request_proto_msgTypes,
	}.Build()
	File_authpb_v2_extend_session_request_proto = out.File
	file_authpb_v2_extend_session_request_proto_goTypes = nil
	file_authpb_v2_extend_session_request_proto_depIdxs = nil
}
