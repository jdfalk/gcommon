// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: config/v1/notification_settings.proto

package v1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	v1 "github.com/jdfalk/gcommon/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ConfigNotificationSettings struct {
	state                   protoimpl.MessageState        `protogen:"opaque.v1"`
	xxx_hidden_Enabled      bool                          `protobuf:"varint,1,opt,name=enabled"`
	xxx_hidden_Channels     *[]*ConfigNotificationChannel `protobuf:"bytes,2,rep,name=channels"`
	xxx_hidden_Triggers     []v1.NotificationTrigger      `protobuf:"varint,3,rep,packed,name=triggers,enum=common.v1.NotificationTrigger"`
	xxx_hidden_Template     *string                       `protobuf:"bytes,4,opt,name=template"`
	xxx_hidden_Recipients   []string                      `protobuf:"bytes,5,rep,name=recipients"`
	xxx_hidden_DelayMinutes int32                         `protobuf:"varint,6,opt,name=delay_minutes,json=delayMinutes"`
	xxx_hidden_Batching     *BatchingSettings             `protobuf:"bytes,7,opt,name=batching"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ConfigNotificationSettings) Reset() {
	*x = ConfigNotificationSettings{}
	mi := &file_config_v1_notification_settings_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigNotificationSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigNotificationSettings) ProtoMessage() {}

func (x *ConfigNotificationSettings) ProtoReflect() protoreflect.Message {
	mi := &file_config_v1_notification_settings_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ConfigNotificationSettings) GetEnabled() bool {
	if x != nil {
		return x.xxx_hidden_Enabled
	}
	return false
}

func (x *ConfigNotificationSettings) GetChannels() []*ConfigNotificationChannel {
	if x != nil {
		if x.xxx_hidden_Channels != nil {
			return *x.xxx_hidden_Channels
		}
	}
	return nil
}

func (x *ConfigNotificationSettings) GetTriggers() []v1.NotificationTrigger {
	if x != nil {
		return x.xxx_hidden_Triggers
	}
	return nil
}

func (x *ConfigNotificationSettings) GetTemplate() string {
	if x != nil {
		if x.xxx_hidden_Template != nil {
			return *x.xxx_hidden_Template
		}
		return ""
	}
	return ""
}

func (x *ConfigNotificationSettings) GetRecipients() []string {
	if x != nil {
		return x.xxx_hidden_Recipients
	}
	return nil
}

func (x *ConfigNotificationSettings) GetDelayMinutes() int32 {
	if x != nil {
		return x.xxx_hidden_DelayMinutes
	}
	return 0
}

func (x *ConfigNotificationSettings) GetBatching() *BatchingSettings {
	if x != nil {
		return x.xxx_hidden_Batching
	}
	return nil
}

func (x *ConfigNotificationSettings) SetEnabled(v bool) {
	x.xxx_hidden_Enabled = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 7)
}

func (x *ConfigNotificationSettings) SetChannels(v []*ConfigNotificationChannel) {
	x.xxx_hidden_Channels = &v
}

func (x *ConfigNotificationSettings) SetTriggers(v []v1.NotificationTrigger) {
	x.xxx_hidden_Triggers = v
}

func (x *ConfigNotificationSettings) SetTemplate(v string) {
	x.xxx_hidden_Template = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 7)
}

func (x *ConfigNotificationSettings) SetRecipients(v []string) {
	x.xxx_hidden_Recipients = v
}

func (x *ConfigNotificationSettings) SetDelayMinutes(v int32) {
	x.xxx_hidden_DelayMinutes = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 7)
}

func (x *ConfigNotificationSettings) SetBatching(v *BatchingSettings) {
	x.xxx_hidden_Batching = v
}

func (x *ConfigNotificationSettings) HasEnabled() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ConfigNotificationSettings) HasTemplate() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *ConfigNotificationSettings) HasDelayMinutes() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *ConfigNotificationSettings) HasBatching() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Batching != nil
}

func (x *ConfigNotificationSettings) ClearEnabled() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Enabled = false
}

func (x *ConfigNotificationSettings) ClearTemplate() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Template = nil
}

func (x *ConfigNotificationSettings) ClearDelayMinutes() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_DelayMinutes = 0
}

func (x *ConfigNotificationSettings) ClearBatching() {
	x.xxx_hidden_Batching = nil
}

type ConfigNotificationSettings_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Whether notifications are enabled
	Enabled *bool
	// Notification channels
	Channels []*ConfigNotificationChannel
	// Notification triggers
	Triggers []v1.NotificationTrigger
	// Notification template
	Template *string
	// Notification recipients
	Recipients []string
	// Notification delay in minutes
	DelayMinutes *int32
	// Notification batching settings
	Batching *BatchingSettings
}

func (b0 ConfigNotificationSettings_builder) Build() *ConfigNotificationSettings {
	m0 := &ConfigNotificationSettings{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Enabled != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 7)
		x.xxx_hidden_Enabled = *b.Enabled
	}
	x.xxx_hidden_Channels = &b.Channels
	x.xxx_hidden_Triggers = b.Triggers
	if b.Template != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 7)
		x.xxx_hidden_Template = b.Template
	}
	x.xxx_hidden_Recipients = b.Recipients
	if b.DelayMinutes != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 7)
		x.xxx_hidden_DelayMinutes = *b.DelayMinutes
	}
	x.xxx_hidden_Batching = b.Batching
	return m0
}

var File_config_v1_notification_settings_proto protoreflect.FileDescriptor

const file_config_v1_notification_settings_proto_rawDesc = "" +
	"\n" +
	"%config/v1/notification_settings.proto\x12\tconfig.v1\x1a$common/v1/notification_trigger.proto\x1a!config/v1/batching_settings.proto\x1a$config/v1/notification_channel.proto\x1a!google/protobuf/go_features.proto\x1a\x1bbuf/validate/validate.proto\"\xfe\x02\n" +
	"\x1aConfigNotificationSettings\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x12J\n" +
	"\bchannels\x18\x02 \x03(\v2$.config.v1.ConfigNotificationChannelB\b\xbaH\x05\x92\x01\x02\b\x01R\bchannels\x12D\n" +
	"\btriggers\x18\x03 \x03(\x0e2\x1e.common.v1.NotificationTriggerB\b\xbaH\x05\x92\x01\x02\b\x01R\btriggers\x12#\n" +
	"\btemplate\x18\x04 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\btemplate\x12(\n" +
	"\n" +
	"recipients\x18\x05 \x03(\tB\b\xbaH\x05\x92\x01\x02\b\x01R\n" +
	"recipients\x12,\n" +
	"\rdelay_minutes\x18\x06 \x01(\x05B\a\xbaH\x04\x1a\x02(\x00R\fdelayMinutes\x127\n" +
	"\bbatching\x18\a \x01(\v2\x1b.config.v1.BatchingSettingsR\bbatchingB-Z#github.com/jdfalk/gcommon/config/v1\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_config_v1_notification_settings_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_config_v1_notification_settings_proto_goTypes = []any{
	(*ConfigNotificationSettings)(nil), // 0: config.v1.ConfigNotificationSettings
	(*ConfigNotificationChannel)(nil),  // 1: config.v1.ConfigNotificationChannel
	(v1.NotificationTrigger)(0),        // 2: common.v1.NotificationTrigger
	(*BatchingSettings)(nil),           // 3: config.v1.BatchingSettings
}
var file_config_v1_notification_settings_proto_depIdxs = []int32{
	1, // 0: config.v1.ConfigNotificationSettings.channels:type_name -> config.v1.ConfigNotificationChannel
	2, // 1: config.v1.ConfigNotificationSettings.triggers:type_name -> common.v1.NotificationTrigger
	3, // 2: config.v1.ConfigNotificationSettings.batching:type_name -> config.v1.BatchingSettings
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_config_v1_notification_settings_proto_init() }
func file_config_v1_notification_settings_proto_init() {
	if File_config_v1_notification_settings_proto != nil {
		return
	}
	file_config_v1_batching_settings_proto_init()
	file_config_v1_notification_channel_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_config_v1_notification_settings_proto_rawDesc), len(file_config_v1_notification_settings_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_config_v1_notification_settings_proto_goTypes,
		DependencyIndexes: file_config_v1_notification_settings_proto_depIdxs,
		MessageInfos:      file_config_v1_notification_settings_proto_msgTypes,
	}.Build()
	File_config_v1_notification_settings_proto = out.File
	file_config_v1_notification_settings_proto_goTypes = nil
	file_config_v1_notification_settings_proto_depIdxs = nil
}
