// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: queue/v1/format_options.proto

package queue

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	common "github.com/jdfalk/gcommon/pkg/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// Serialization options for a specific format.
type FormatOptions struct {
	state                           protoimpl.MessageState      `protogen:"opaque.v1"`
	xxx_hidden_Format               common.SerializationFormat  `protobuf:"varint,1,opt,name=format,enum=common.v1.SerializationFormat"`
	xxx_hidden_Options              map[string]string           `protobuf:"bytes,2,rep,name=options" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_EnableCompression    bool                        `protobuf:"varint,3,opt,name=enable_compression,json=enableCompression"`
	xxx_hidden_CompressionAlgorithm common.CompressionAlgorithm `protobuf:"varint,4,opt,name=compression_algorithm,json=compressionAlgorithm,enum=common.v1.CompressionAlgorithm"`
	xxx_hidden_MaxMessageSize       int64                       `protobuf:"varint,5,opt,name=max_message_size,json=maxMessageSize"`
	XXX_raceDetectHookData          protoimpl.RaceDetectHookData
	XXX_presence                    [1]uint32
	unknownFields                   protoimpl.UnknownFields
	sizeCache                       protoimpl.SizeCache
}

func (x *FormatOptions) Reset() {
	*x = FormatOptions{}
	mi := &file_queue_v1_format_options_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FormatOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FormatOptions) ProtoMessage() {}

func (x *FormatOptions) ProtoReflect() protoreflect.Message {
	mi := &file_queue_v1_format_options_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *FormatOptions) GetFormat() common.SerializationFormat {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 0) {
			return x.xxx_hidden_Format
		}
	}
	return common.SerializationFormat(0)
}

func (x *FormatOptions) GetOptions() map[string]string {
	if x != nil {
		return x.xxx_hidden_Options
	}
	return nil
}

func (x *FormatOptions) GetEnableCompression() bool {
	if x != nil {
		return x.xxx_hidden_EnableCompression
	}
	return false
}

func (x *FormatOptions) GetCompressionAlgorithm() common.CompressionAlgorithm {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 3) {
			return x.xxx_hidden_CompressionAlgorithm
		}
	}
	return common.CompressionAlgorithm(0)
}

func (x *FormatOptions) GetMaxMessageSize() int64 {
	if x != nil {
		return x.xxx_hidden_MaxMessageSize
	}
	return 0
}

func (x *FormatOptions) SetFormat(v common.SerializationFormat) {
	x.xxx_hidden_Format = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *FormatOptions) SetOptions(v map[string]string) {
	x.xxx_hidden_Options = v
}

func (x *FormatOptions) SetEnableCompression(v bool) {
	x.xxx_hidden_EnableCompression = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *FormatOptions) SetCompressionAlgorithm(v common.CompressionAlgorithm) {
	x.xxx_hidden_CompressionAlgorithm = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *FormatOptions) SetMaxMessageSize(v int64) {
	x.xxx_hidden_MaxMessageSize = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 5)
}

func (x *FormatOptions) HasFormat() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *FormatOptions) HasEnableCompression() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *FormatOptions) HasCompressionAlgorithm() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *FormatOptions) HasMaxMessageSize() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *FormatOptions) ClearFormat() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Format = common.SerializationFormat_SERIALIZATION_FORMAT_UNSPECIFIED
}

func (x *FormatOptions) ClearEnableCompression() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_EnableCompression = false
}

func (x *FormatOptions) ClearCompressionAlgorithm() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_CompressionAlgorithm = common.CompressionAlgorithm_COMPRESSION_ALGORITHM_UNSPECIFIED
}

func (x *FormatOptions) ClearMaxMessageSize() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_MaxMessageSize = 0
}

type FormatOptions_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Serialization format
	Format *common.SerializationFormat
	// Format-specific configuration
	Options map[string]string
	// Whether to enable compression for this format
	EnableCompression *bool
	// Compression algorithm
	CompressionAlgorithm *common.CompressionAlgorithm
	// Maximum message size for this format
	MaxMessageSize *int64
}

func (b0 FormatOptions_builder) Build() *FormatOptions {
	m0 := &FormatOptions{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Format != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_Format = *b.Format
	}
	x.xxx_hidden_Options = b.Options
	if b.EnableCompression != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_EnableCompression = *b.EnableCompression
	}
	if b.CompressionAlgorithm != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_CompressionAlgorithm = *b.CompressionAlgorithm
	}
	if b.MaxMessageSize != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 5)
		x.xxx_hidden_MaxMessageSize = *b.MaxMessageSize
	}
	return m0
}

var File_queue_v1_format_options_proto protoreflect.FileDescriptor

const file_queue_v1_format_options_proto_rawDesc = "" +
	"\n" +
	"\x1dqueue/v1/format_options.proto\x12\bqueue.v1\x1a%common/v1/compression_algorithm.proto\x1a$common/v1/serialization_format.proto\x1a!google/protobuf/go_features.proto\x1a\x1bbuf/validate/validate.proto\"\xfb\x02\n" +
	"\rFormatOptions\x126\n" +
	"\x06format\x18\x01 \x01(\x0e2\x1e.common.v1.SerializationFormatR\x06format\x12>\n" +
	"\aoptions\x18\x02 \x03(\v2$.queue.v1.FormatOptions.OptionsEntryR\aoptions\x12-\n" +
	"\x12enable_compression\x18\x03 \x01(\bR\x11enableCompression\x12T\n" +
	"\x15compression_algorithm\x18\x04 \x01(\x0e2\x1f.common.v1.CompressionAlgorithmR\x14compressionAlgorithm\x121\n" +
	"\x10max_message_size\x18\x05 \x01(\x03B\a\xbaH\x04\"\x02(\x00R\x0emaxMessageSize\x1a:\n" +
	"\fOptionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B-Z#github.com/jdfalk/gcommon/pkg/queue\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_queue_v1_format_options_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_queue_v1_format_options_proto_goTypes = []any{
	(*FormatOptions)(nil),            // 0: queue.v1.FormatOptions
	nil,                              // 1: queue.v1.FormatOptions.OptionsEntry
	(common.SerializationFormat)(0),  // 2: common.v1.SerializationFormat
	(common.CompressionAlgorithm)(0), // 3: common.v1.CompressionAlgorithm
}
var file_queue_v1_format_options_proto_depIdxs = []int32{
	2, // 0: queue.v1.FormatOptions.format:type_name -> common.v1.SerializationFormat
	1, // 1: queue.v1.FormatOptions.options:type_name -> queue.v1.FormatOptions.OptionsEntry
	3, // 2: queue.v1.FormatOptions.compression_algorithm:type_name -> common.v1.CompressionAlgorithm
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_queue_v1_format_options_proto_init() }
func file_queue_v1_format_options_proto_init() {
	if File_queue_v1_format_options_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_queue_v1_format_options_proto_rawDesc), len(file_queue_v1_format_options_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_queue_v1_format_options_proto_goTypes,
		DependencyIndexes: file_queue_v1_format_options_proto_depIdxs,
		MessageInfos:      file_queue_v1_format_options_proto_msgTypes,
	}.Build()
	File_queue_v1_format_options_proto = out.File
	file_queue_v1_format_options_proto_goTypes = nil
	file_queue_v1_format_options_proto_depIdxs = nil
}
