// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: databasepb/v2/execute_batch_request.proto

package v2

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	v2 "github.com/jdfalk/gcommon/pkg/commonpb/v2"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ExecuteBatchRequest struct {
	state                    protoimpl.MessageState     `protogen:"opaque.v1"`
	xxx_hidden_Operations    *[]*DatabaseBatchOperation `protobuf:"bytes,1,rep,name=operations"`
	xxx_hidden_Database      *string                    `protobuf:"bytes,2,opt,name=database"`
	xxx_hidden_Options       *BatchExecuteOptions       `protobuf:"bytes,3,opt,name=options"`
	xxx_hidden_Metadata      *v2.RequestMetadata        `protobuf:"bytes,4,opt,name=metadata"`
	xxx_hidden_TransactionId *string                    `protobuf:"bytes,5,opt,name=transaction_id,json=transactionId"`
	// Deprecated: Do not use. This will be deleted in the near future.
	XXX_lazyUnmarshalInfo  protoimpl.LazyUnmarshalInfo
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ExecuteBatchRequest) Reset() {
	*x = ExecuteBatchRequest{}
	mi := &file_databasepb_v2_execute_batch_request_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteBatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteBatchRequest) ProtoMessage() {}

func (x *ExecuteBatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_databasepb_v2_execute_batch_request_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ExecuteBatchRequest) GetOperations() []*DatabaseBatchOperation {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 0) {
			if protoimpl.X.AtomicCheckPointerIsNil(&x.xxx_hidden_Operations) {
				protoimpl.X.UnmarshalField(x, 1)
			}
			var rv *[]*DatabaseBatchOperation
			protoimpl.X.AtomicLoadPointer(protoimpl.Pointer(&x.xxx_hidden_Operations), protoimpl.Pointer(&rv))
			return *rv
		}
	}
	return nil
}

func (x *ExecuteBatchRequest) GetDatabase() string {
	if x != nil {
		if x.xxx_hidden_Database != nil {
			return *x.xxx_hidden_Database
		}
		return ""
	}
	return ""
}

func (x *ExecuteBatchRequest) GetOptions() *BatchExecuteOptions {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 2) {
			if protoimpl.X.AtomicCheckPointerIsNil(&x.xxx_hidden_Options) {
				protoimpl.X.UnmarshalField(x, 3)
			}
			var rv *BatchExecuteOptions
			protoimpl.X.AtomicLoadPointer(protoimpl.Pointer(&x.xxx_hidden_Options), protoimpl.Pointer(&rv))
			return rv
		}
	}
	return nil
}

func (x *ExecuteBatchRequest) GetMetadata() *v2.RequestMetadata {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 3) {
			if protoimpl.X.AtomicCheckPointerIsNil(&x.xxx_hidden_Metadata) {
				protoimpl.X.UnmarshalField(x, 4)
			}
			var rv *v2.RequestMetadata
			protoimpl.X.AtomicLoadPointer(protoimpl.Pointer(&x.xxx_hidden_Metadata), protoimpl.Pointer(&rv))
			return rv
		}
	}
	return nil
}

func (x *ExecuteBatchRequest) GetTransactionId() string {
	if x != nil {
		if x.xxx_hidden_TransactionId != nil {
			return *x.xxx_hidden_TransactionId
		}
		return ""
	}
	return ""
}

func (x *ExecuteBatchRequest) SetOperations(v []*DatabaseBatchOperation) {
	var sv *[]*DatabaseBatchOperation
	protoimpl.X.AtomicLoadPointer(protoimpl.Pointer(&x.xxx_hidden_Operations), protoimpl.Pointer(&sv))
	if sv == nil {
		sv = &[]*DatabaseBatchOperation{}
		protoimpl.X.AtomicInitializePointer(protoimpl.Pointer(&x.xxx_hidden_Operations), protoimpl.Pointer(&sv))
	}
	*sv = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *ExecuteBatchRequest) SetDatabase(v string) {
	x.xxx_hidden_Database = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *ExecuteBatchRequest) SetOptions(v *BatchExecuteOptions) {
	protoimpl.X.AtomicSetPointer(&x.xxx_hidden_Options, v)
	if v == nil {
		protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	} else {
		protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
	}
}

func (x *ExecuteBatchRequest) SetMetadata(v *v2.RequestMetadata) {
	protoimpl.X.AtomicSetPointer(&x.xxx_hidden_Metadata, v)
	if v == nil {
		protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	} else {
		protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
	}
}

func (x *ExecuteBatchRequest) SetTransactionId(v string) {
	x.xxx_hidden_TransactionId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 5)
}

func (x *ExecuteBatchRequest) HasDatabase() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ExecuteBatchRequest) HasOptions() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ExecuteBatchRequest) HasMetadata() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *ExecuteBatchRequest) HasTransactionId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *ExecuteBatchRequest) ClearDatabase() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Database = nil
}

func (x *ExecuteBatchRequest) ClearOptions() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	protoimpl.X.AtomicSetPointer(&x.xxx_hidden_Options, (*BatchExecuteOptions)(nil))
}

func (x *ExecuteBatchRequest) ClearMetadata() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	protoimpl.X.AtomicSetPointer(&x.xxx_hidden_Metadata, (*v2.RequestMetadata)(nil))
}

func (x *ExecuteBatchRequest) ClearTransactionId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_TransactionId = nil
}

type ExecuteBatchRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// List of operations to execute in the batch
	Operations []*DatabaseBatchOperation
	// Database name (optional, uses default if not specified)
	Database *string
	// Batch execution options and configuration
	Options *BatchExecuteOptions
	// Request metadata for tracing and authentication
	Metadata *v2.RequestMetadata
	// Transaction ID if this batch is part of a transaction
	TransactionId *string
}

func (b0 ExecuteBatchRequest_builder) Build() *ExecuteBatchRequest {
	m0 := &ExecuteBatchRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Operations != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_Operations = &b.Operations
	}
	if b.Database != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_Database = b.Database
	}
	if b.Options != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_Options = b.Options
	}
	if b.Metadata != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_Metadata = b.Metadata
	}
	if b.TransactionId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 5)
		x.xxx_hidden_TransactionId = b.TransactionId
	}
	return m0
}

var File_databasepb_v2_execute_batch_request_proto protoreflect.FileDescriptor

const file_databasepb_v2_execute_batch_request_proto_rawDesc = "" +
	"\n" +
	")databasepb/v2/execute_batch_request.proto\x12\vdatabase.v2\x1a\"commonpb/v2/request_metadata.proto\x1a)databasepb/v2/batch_execute_options.proto\x1a#databasepb/v2/batch_operation.proto\x1a!google/protobuf/go_features.proto\x1a\x1bbuf/validate/validate.proto\"\xb7\x02\n" +
	"\x13ExecuteBatchRequest\x12O\n" +
	"\n" +
	"operations\x18\x01 \x03(\v2#.database.v2.DatabaseBatchOperationB\n" +
	"\xbaH\x05\x92\x01\x02\b\x01(\x01R\n" +
	"operations\x12#\n" +
	"\bdatabase\x18\x02 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\bdatabase\x12>\n" +
	"\aoptions\x18\x03 \x01(\v2 .database.v2.BatchExecuteOptionsB\x02(\x01R\aoptions\x12:\n" +
	"\bmetadata\x18\x04 \x01(\v2\x1a.common.v2.RequestMetadataB\x02(\x01R\bmetadata\x12.\n" +
	"\x0etransaction_id\x18\x05 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\rtransactionIdB\xad\x01\n" +
	"\x0fcom.database.v2B\x18ExecuteBatchRequestProtoP\x01Z+github.com/jdfalk/gcommon/pkg/databasepb/v2\xa2\x02\x03DXX\xaa\x02\vDatabase.V2\xca\x02\vDatabase\\V2\xe2\x02\x17Database\\V2\\GPBMetadata\xea\x02\fDatabase::V2\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_databasepb_v2_execute_batch_request_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_databasepb_v2_execute_batch_request_proto_goTypes = []any{
	(*ExecuteBatchRequest)(nil),    // 0: database.v2.ExecuteBatchRequest
	(*DatabaseBatchOperation)(nil), // 1: database.v2.DatabaseBatchOperation
	(*BatchExecuteOptions)(nil),    // 2: database.v2.BatchExecuteOptions
	(*v2.RequestMetadata)(nil),     // 3: common.v2.RequestMetadata
}
var file_databasepb_v2_execute_batch_request_proto_depIdxs = []int32{
	1, // 0: database.v2.ExecuteBatchRequest.operations:type_name -> database.v2.DatabaseBatchOperation
	2, // 1: database.v2.ExecuteBatchRequest.options:type_name -> database.v2.BatchExecuteOptions
	3, // 2: database.v2.ExecuteBatchRequest.metadata:type_name -> common.v2.RequestMetadata
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_databasepb_v2_execute_batch_request_proto_init() }
func file_databasepb_v2_execute_batch_request_proto_init() {
	if File_databasepb_v2_execute_batch_request_proto != nil {
		return
	}
	file_databasepb_v2_batch_execute_options_proto_init()
	file_databasepb_v2_batch_operation_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_databasepb_v2_execute_batch_request_proto_rawDesc), len(file_databasepb_v2_execute_batch_request_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_databasepb_v2_execute_batch_request_proto_goTypes,
		DependencyIndexes: file_databasepb_v2_execute_batch_request_proto_depIdxs,
		MessageInfos:      file_databasepb_v2_execute_batch_request_proto_msgTypes,
	}.Build()
	File_databasepb_v2_execute_batch_request_proto = out.File
	file_databasepb_v2_execute_batch_request_proto_goTypes = nil
	file_databasepb_v2_execute_batch_request_proto_depIdxs = nil
}
